[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/Menu.jsx":"4","/app/src/Routing.js":"5","/app/src/components/LogoutButton.jsx":"6","/app/src/pages/login/Login.jsx":"7","/app/src/pages/signin/Signin.jsx":"8","/app/src/pages/result/Result.jsx":"9","/app/src/pages/result/BestResult.jsx":"10","/app/src/pages/result/ResultsTable.jsx":"11","/app/src/pages/submit/Submits.jsx":"12","/app/src/pages/submit/SubmitText.jsx":"13","/app/src/pages/submit/SubmitUrl.jsx":"14"},{"size":500,"mtime":1615043056122,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1615043056122,"results":"17","hashOfConfig":"16"},{"size":842,"mtime":1619373131035,"results":"18","hashOfConfig":"16"},{"size":3009,"mtime":1619170596824,"results":"19","hashOfConfig":"16"},{"size":82,"mtime":1618694234335,"results":"20","hashOfConfig":"16"},{"size":720,"mtime":1619170596824,"results":"21","hashOfConfig":"16"},{"size":3030,"mtime":1619372239699,"results":"22","hashOfConfig":"16"},{"size":3791,"mtime":1619372252523,"results":"23","hashOfConfig":"16"},{"size":1038,"mtime":1619372177744,"results":"24","hashOfConfig":"16"},{"size":1494,"mtime":1619372265256,"results":"25","hashOfConfig":"16"},{"size":2143,"mtime":1619372275640,"results":"26","hashOfConfig":"16"},{"size":1418,"mtime":1619375559562,"results":"27","hashOfConfig":"16"},{"size":3113,"mtime":1619374693854,"results":"28","hashOfConfig":"16"},{"size":132,"mtime":1619375107322,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ch172a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["60","61"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/Menu.jsx",["62","63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LogoutButton from \"./LogoutButton\";\n\nconst useStyle = makeStyles({\n    connexionDiv: {\n        position: \"absolute\",\n        right: 15,\n    },\n    buttonLi: {\n        display: \"inline-block\",\n        marginLeft: 10,\n    },\n    button: {\n        height: 30,\n    }\n})\n\nconst Menu = (({accessToken, ...pros}) => {\n    const classes = useStyle();\n    const [token, setToken] = useState();\n    \n    // TODO Try to fix the refresh of menu if token exists\n    useEffect(() => {\n        setToken(localStorage.getItem(\"access_token\"))\n    }, [localStorage])\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"/#\">Détecteur d'émotions</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/#result\">Résultat <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <div className={classes.connexionDiv}>\n                        <li className=\"nav-item active\" className={classes.buttonLi}>\n                            <Button size=\"small\" className={classes.button}>\n                                <a className=\"nav-link\" href=\"/#signin\">Inscription <span className=\"sr-only\">(current)</span></a>\n                            </Button>\n                        </li>\n                        <li className=\"nav-item active\"className={classes.buttonLi}>\n                            {\n                                !isExpired(token)\n                                    ? <LogoutButton />\n                                    : <Button \n                                        variant=\"contained\" \n                                        color=\"primary\" \n                                        size=\"small\" \n                                        className={classes.button}\n                                    >\n                                        <a className=\"nav-link\" href=\"/#login\">Connexion <span className=\"sr-only\">(current)</span></a>\n                                    </Button>\n                            }\n                            \n                        </li>\n                    </div>\n                    </ul>\n                </div>\n            </nav>\n            <br />\n            <br />\n        </>\n    )\n});\n\nexport default Menu;","/app/src/Routing.js",[],"/app/src/components/LogoutButton.jsx",[],"/app/src/pages/login/Login.jsx",[],"/app/src/pages/signin/Signin.jsx",[],"/app/src/pages/result/Result.jsx",[],"/app/src/pages/result/BestResult.jsx",[],"/app/src/pages/result/ResultsTable.jsx",[],"/app/src/pages/submit/Submits.jsx",["66","67"],"/app/src/pages/submit/SubmitText.jsx",[],"/app/src/pages/submit/SubmitUrl.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":21,"nodeType":"74","messageId":"75","endLine":2,"endColumn":32},{"ruleId":"76","severity":1,"message":"77","line":28,"column":8,"nodeType":"78","endLine":28,"endColumn":22,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":44,"column":57,"nodeType":"82","endLine":44,"endColumn":85},{"ruleId":"80","severity":1,"message":"81","line":49,"column":56,"nodeType":"82","endLine":49,"endColumn":84},{"ruleId":"72","severity":1,"message":"83","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":21,"column":5,"nodeType":"86","messageId":"87","endLine":28,"endColumn":6},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'decodeToken' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'localStorage'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["90"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: []",{"range":"93","text":"94"},[746,760],"[]"]