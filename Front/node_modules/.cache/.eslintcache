[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/Menu.jsx":"4","/app/src/Routing.js":"5","/app/src/components/LogoutButton.jsx":"6","/app/src/pages/login/Login.jsx":"7","/app/src/pages/signin/Signin.jsx":"8","/app/src/pages/result/Result.jsx":"9","/app/src/pages/result/BestResult.jsx":"10","/app/src/pages/result/ResultsTable.jsx":"11","/app/src/pages/submit/Submits.jsx":"12","/app/src/pages/submit/SubmitText.jsx":"13","/app/src/pages/submit/SubmitUrl.jsx":"14","/app/src/pages/result/ResultText.jsx":"15","/app/src/pages/result/ResultUrl.jsx":"16"},{"size":500,"mtime":1615043056122,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1615043056122,"results":"19","hashOfConfig":"18"},{"size":842,"mtime":1619457235935,"results":"20","hashOfConfig":"18"},{"size":2890,"mtime":1619457702730,"results":"21","hashOfConfig":"18"},{"size":82,"mtime":1618694234335,"results":"22","hashOfConfig":"18"},{"size":720,"mtime":1619170596824,"results":"23","hashOfConfig":"18"},{"size":3030,"mtime":1619372239699,"results":"24","hashOfConfig":"18"},{"size":3888,"mtime":1619458197710,"results":"25","hashOfConfig":"18"},{"size":337,"mtime":1619452572934,"results":"26","hashOfConfig":"18"},{"size":1494,"mtime":1619372265256,"results":"27","hashOfConfig":"18"},{"size":2143,"mtime":1619372275640,"results":"28","hashOfConfig":"18"},{"size":1407,"mtime":1619375655968,"results":"29","hashOfConfig":"18"},{"size":3164,"mtime":1619451870099,"results":"30","hashOfConfig":"18"},{"size":3142,"mtime":1619451954957,"results":"31","hashOfConfig":"18"},{"size":1046,"mtime":1619451707579,"results":"32","hashOfConfig":"18"},{"size":481,"mtime":1619467843829,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ch172a",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["70","71"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/Menu.jsx",["72","73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LogoutButton from \"./LogoutButton\";\n\nconst useStyle = makeStyles({\n    connexionDiv: {\n        position: \"absolute\",\n        right: 15,\n    },\n    buttonLi: {\n        display: \"inline-block\",\n        marginLeft: 10,\n    },\n    button: {\n        height: 30,\n    }\n})\n\nconst Menu = (({accessToken, ...pros}) => {\n    const classes = useStyle();\n    const [token, setToken] = useState(accessToken);\n    \n    useEffect(() => {\n        setInterval(() => {\n            setToken(localStorage.getItem(\"access_token\"))\n        }, [])\n    }, 5000);\n\n    const LogButton = () => {\n        if (!token && isExpired(token)) {\n            return (\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"small\" \n                    className={classes.button}\n                >\n                    <a className=\"nav-link\" href=\"/#login\">Connexion <span className=\"sr-only\">(current)</span></a>\n                </Button>\n            )\n        } else {\n            return <LogoutButton />\n        }\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"/#\">Détecteur d'émotions</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/#result\">Résultat <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <div className={classes.connexionDiv}>\n                        <li className=\"nav-item active\" className={classes.buttonLi}>\n                            <Button size=\"small\" className={classes.button}>\n                                <a className=\"nav-link\" href=\"/#signin\">Inscription <span className=\"sr-only\">(current)</span></a>\n                            </Button>\n                        </li>\n                        <li className=\"nav-item active\"className={classes.buttonLi}>\n                            <LogButton />                            \n                        </li>\n                    </div>\n                    </ul>\n                </div>\n            </nav>\n            <br />\n            <br />\n        </>\n    )\n});\n\nexport default Menu;","/app/src/Routing.js",[],"/app/src/components/LogoutButton.jsx",[],"/app/src/pages/login/Login.jsx",[],"/app/src/pages/signin/Signin.jsx",[],"/app/src/pages/result/Result.jsx",["76"],"import React from \"react\";\nimport ResultText from \"./ResultText\"\nimport ResultUrl from \"./ResultUrl\"\n\nconst Result = (props) => {\n    let from = sessionStorage.getItem(\"from\")\n\n    switch (from) {\n        case \"url\":\n            return <ResultUrl />\n        case \"text\":\n            return <ResultText />\n    }\n};\n\nexport default Result;","/app/src/pages/result/BestResult.jsx",[],"/app/src/pages/result/ResultsTable.jsx",[],"/app/src/pages/submit/Submits.jsx",["77"],"import React, { useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubmitText from \"./SubmitText\";\nimport SubmitUrl from \"./SubmitUrl\";\n\nconst useStyle = makeStyles({\n  choiceButton: {\n      width: 220,\n      height: 25,\n      margin: 20,\n  }\n});\n\n\nconst Submits = (props) => {\n    const classes = useStyle();\n    const [choice, setChoice] = useState(\"airbnb\")\n    let component = \"\"\n\n    switch (choice) {\n        case \"text\":\n            component = <SubmitText />\n            break\n        case \"airbnb\":\n            component = <SubmitUrl />\n            break\n    }\n\n    return(\n        <>\n            <div>\n             <Button \n                    variant=\"contained\"\n                    color={choice === \"airbnb\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"airbnb\")}\n                >\n                    Avis AirBnB\n                </Button>\n\n                <Button \n                    variant=\"contained\"\n                    color={choice === \"text\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"text\")}\n                >\n                    Texte libre\n                </Button>\n            </div>\n            {component}\n        </>\n    )\n};\n\nexport default Submits;","/app/src/pages/submit/SubmitText.jsx",[],"/app/src/pages/submit/SubmitUrl.jsx",[],"/app/src/pages/result/ResultText.jsx",[],"/app/src/pages/result/ResultUrl.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":21,"nodeType":"84","messageId":"85","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":29,"column":8,"nodeType":"88","endLine":29,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":62,"column":57,"nodeType":"91","endLine":62,"endColumn":85},{"ruleId":"89","severity":1,"message":"90","line":67,"column":56,"nodeType":"91","endLine":67,"endColumn":84},{"ruleId":"92","severity":1,"message":"93","line":8,"column":5,"nodeType":"94","messageId":"95","endLine":13,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":21,"column":5,"nodeType":"94","messageId":"95","endLine":28,"endColumn":6},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'decodeToken' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Literal","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]