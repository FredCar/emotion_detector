[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/Menu.jsx":"4","/app/src/Routing.js":"5","/app/src/components/LogoutButton.jsx":"6","/app/src/pages/login/Login.jsx":"7","/app/src/pages/signin/Signin.jsx":"8","/app/src/pages/result/Result.jsx":"9","/app/src/pages/result/BestResult.jsx":"10","/app/src/pages/result/ResultsTable.jsx":"11","/app/src/pages/submit/Submits.jsx":"12","/app/src/pages/submit/SubmitText.jsx":"13","/app/src/pages/submit/SubmitUrl.jsx":"14","/app/src/pages/result/ResultText.jsx":"15","/app/src/pages/result/ResultUrl.jsx":"16","/app/src/pages/result/ResultsGraph.jsx":"17","/app/src/pages/account/Account.jsx":"18"},{"size":500,"mtime":1615043056122,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1615043056122,"results":"21","hashOfConfig":"20"},{"size":902,"mtime":1620502273591,"results":"22","hashOfConfig":"20"},{"size":3391,"mtime":1620502613918,"results":"23","hashOfConfig":"20"},{"size":82,"mtime":1618694234335,"results":"24","hashOfConfig":"20"},{"size":720,"mtime":1619170596824,"results":"25","hashOfConfig":"20"},{"size":3030,"mtime":1619372239699,"results":"26","hashOfConfig":"20"},{"size":3889,"mtime":1619492719253,"results":"27","hashOfConfig":"20"},{"size":337,"mtime":1620301592628,"results":"28","hashOfConfig":"20"},{"size":1494,"mtime":1619372265256,"results":"29","hashOfConfig":"20"},{"size":2165,"mtime":1620380714530,"results":"30","hashOfConfig":"20"},{"size":2221,"mtime":1619526426452,"results":"31","hashOfConfig":"20"},{"size":2383,"mtime":1619527653629,"results":"32","hashOfConfig":"20"},{"size":2351,"mtime":1619527610373,"results":"33","hashOfConfig":"20"},{"size":1068,"mtime":1620380307973,"results":"34","hashOfConfig":"20"},{"size":726,"mtime":1620380293570,"results":"35","hashOfConfig":"20"},{"size":1880,"mtime":1620312029533,"results":"36","hashOfConfig":"20"},{"size":526,"mtime":1620503121057,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ch172a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.js",[],["78","79"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/Menu.jsx",["80","81","82"],"/app/src/Routing.js",[],"/app/src/components/LogoutButton.jsx",[],"/app/src/pages/login/Login.jsx",[],"/app/src/pages/signin/Signin.jsx",[],"/app/src/pages/result/Result.jsx",["83"],"import React from \"react\";\nimport ResultText from \"./ResultText\"\nimport ResultUrl from \"./ResultUrl\"\n\nconst Result = (props) => {\n    let from = sessionStorage.getItem(\"from\")\n\n    switch (from) {\n        case \"url\":\n            return <ResultUrl />\n        case \"text\":\n            return <ResultText />\n    }\n};\n\nexport default Result;","/app/src/pages/result/BestResult.jsx",[],"/app/src/pages/result/ResultsTable.jsx",[],"/app/src/pages/submit/Submits.jsx",["84"],"import React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubmitText from \"./SubmitText\";\nimport SubmitUrl from \"./SubmitUrl\";\n\nconst useStyle = makeStyles({\n  choiceButton: {\n      width: 220,\n      height: 25,\n      margin: 20,\n  },\n  alert: {\n      width: 800,\n      margin: \"auto\",\n      marginBottom: 20,\n  },\n});\n\n\nconst Submits = (props) => {\n    const classes = useStyle();\n    const [alert, setAlert] = useState([]);\n    const [choice, setChoice] = useState(\"url\")\n    let component = \"\"\n\n    useEffect(() => {\n        const passedAlertSeverity = sessionStorage.getItem(\"alert_severity\")\n        const passedAlert = sessionStorage.getItem(\"alert\")\n        if (passedAlertSeverity && passedAlert) {\n            setAlert([passedAlertSeverity, passedAlert])\n            sessionStorage.removeItem(\"alert\")\n            sessionStorage.removeItem(\"alert_severity\")\n        }\n    }, [])\n\n    switch (choice) {\n        case \"text\":\n            component = <SubmitText setAlert={setAlert} />\n            break\n        case \"url\":\n            component = <SubmitUrl setAlert={setAlert} />\n            break\n    }\n\n    return(\n        <>\n            {\n                alert.length > 0 && <>\n                <Alert severity={alert[0]} className={classes.alert} >\n                    {alert[1]}\n                </Alert>\n                </>\n            }\n            <div>\n             <Button \n                    variant=\"contained\"\n                    color={choice === \"url\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"url\")}\n                >\n                    Avis clients\n                </Button>\n\n                <Button \n                    variant=\"contained\"\n                    color={choice === \"text\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"text\")}\n                >\n                    Texte libre\n                </Button>\n            </div>\n            {component}\n        </>\n    )\n};\n\nexport default Submits;","/app/src/pages/submit/SubmitText.jsx",[],"/app/src/pages/submit/SubmitUrl.jsx",[],"/app/src/pages/result/ResultText.jsx",[],"/app/src/pages/result/ResultUrl.jsx",["85"],"import React from \"react\";\nimport BestResult from \"./BestResult\";\nimport ResultsTable from \"./ResultsTable\";\nimport ResultsGraph from \"./ResultsGraph\";\n\nconst ResultUrl = (props) => {\n    const data = JSON.parse(sessionStorage.getItem(\"data\"))\n\n    return (\n        <>\n            <h4><a href={data[\"url\"]} target=\"_blank\" >{data[\"title\"]}</a></h4>\n            <br /> <br />\n            <BestResult bestResult={data[\"best_result\"]} />\n            <br /> <br />\n            <ResultsGraph detailedResults={data[\"detailed_results\"]} />\n            <br /> <br />\n            <ResultsTable detailedResults={data[\"detailed_results\"]} phrases={data[\"phrases\"]} sents={data[\"sents\"]} />\n        </>\n    )\n};\n\nexport default ResultUrl;","/app/src/pages/result/ResultsGraph.jsx",[],"/app/src/pages/account/Account.jsx",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":34,"column":8,"nodeType":"93","endLine":34,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":83,"column":57,"nodeType":"96","endLine":83,"endColumn":85},{"ruleId":"94","severity":1,"message":"95","line":86,"column":56,"nodeType":"96","endLine":86,"endColumn":84},{"ruleId":"97","severity":1,"message":"98","line":8,"column":5,"nodeType":"99","messageId":"100","endLine":13,"endColumn":6},{"ruleId":"97","severity":1,"message":"98","line":38,"column":5,"nodeType":"99","messageId":"100","endLine":45,"endColumn":6},{"ruleId":"101","severity":1,"message":"102","line":11,"column":17,"nodeType":"103","endLine":11,"endColumn":56},{"ruleId":"104","severity":1,"message":"105","line":5,"column":7,"nodeType":"106","messageId":"107","endLine":5,"endColumn":16},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Literal","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'fetchData' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]