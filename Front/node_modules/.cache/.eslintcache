[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/Menu.jsx":"4","/app/src/Routing.js":"5","/app/src/components/LogoutButton.jsx":"6","/app/src/pages/login/Login.jsx":"7","/app/src/pages/signin/Signin.jsx":"8","/app/src/pages/result/Result.jsx":"9","/app/src/pages/result/BestResult.jsx":"10","/app/src/pages/result/ResultsTable.jsx":"11","/app/src/pages/submit/Submits.jsx":"12","/app/src/pages/submit/SubmitText.jsx":"13","/app/src/pages/submit/SubmitUrl.jsx":"14","/app/src/pages/result/ResultText.jsx":"15","/app/src/pages/result/ResultUrl.jsx":"16","/app/src/pages/result/ResultsGraph.jsx":"17","/app/src/pages/account/Account.jsx":"18","/app/src/pages/account/QueriesTable.jsx":"19"},{"size":500,"mtime":1620895207354,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1620895207354,"results":"22","hashOfConfig":"21"},{"size":902,"mtime":1620895298028,"results":"23","hashOfConfig":"21"},{"size":3391,"mtime":1620895298028,"results":"24","hashOfConfig":"21"},{"size":82,"mtime":1620895207354,"results":"25","hashOfConfig":"21"},{"size":720,"mtime":1620895298028,"results":"26","hashOfConfig":"21"},{"size":3030,"mtime":1620895298028,"results":"27","hashOfConfig":"21"},{"size":3826,"mtime":1621198148609,"results":"28","hashOfConfig":"21"},{"size":337,"mtime":1620895298028,"results":"29","hashOfConfig":"21"},{"size":1494,"mtime":1620895298028,"results":"30","hashOfConfig":"21"},{"size":1597,"mtime":1621485138807,"results":"31","hashOfConfig":"21"},{"size":2221,"mtime":1620895298028,"results":"32","hashOfConfig":"21"},{"size":2438,"mtime":1620895298028,"results":"33","hashOfConfig":"21"},{"size":2398,"mtime":1621197016094,"results":"34","hashOfConfig":"21"},{"size":804,"mtime":1621197119240,"results":"35","hashOfConfig":"21"},{"size":743,"mtime":1620895298028,"results":"36","hashOfConfig":"21"},{"size":1849,"mtime":1620895298028,"results":"37","hashOfConfig":"21"},{"size":203,"mtime":1620895298028,"results":"38","hashOfConfig":"21"},{"size":5887,"mtime":1621198064186,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ch172a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/app/src/index.js",[],["83","84"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/Menu.jsx",["85","86","87"],"import React, { useState, useEffect } from \"react\";\nimport { isExpired, decodeToken } from \"react-jwt\";\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LogoutButton from \"./LogoutButton\";\n\nconst useStyle = makeStyles({\n    connexionDiv: {\n        position: \"absolute\",\n        right: 15,\n    },\n    buttonLi: {\n        display: \"inline-block\",\n        marginLeft: 10,\n    },\n    button: {\n        height: 30,\n    }\n})\n\nconst Menu = ((pros) => {\n    const classes = useStyle();\n    const [token, setToken] = useState();\n    \n    useEffect(() => {\n        setInterval(() => {\n            if (!isExpired(localStorage.getItem(\"access_token\"))) {\n                setToken(localStorage.getItem(\"access_token\"))\n            } else {\n                localStorage.removeItem(\"access_token\")\n                setToken()\n            }\n        }, [])\n    }, 5000);\n\n    const SignUp = () => {\n        const userName = decodeToken(token)?.sub.username;\n\n        if (!token && isExpired(token)) {\n            return (\n                <Button size=\"small\" className={classes.button}>\n                    <a className=\"nav-link\" href=\"/#signin\">Inscription <span className=\"sr-only\">(current)</span></a>\n                </Button>\n            )\n        } else {\n            return (\n                <a className=\"nav-link\" href=\"/#account\"><strong>{userName}</strong> : Votre compte</a>\n            )\n        }\n    }\n\n    const LogButton = () => {\n        if (!token && isExpired(token)) {\n            return (\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"small\" \n                    className={classes.button}\n                >\n                    <a className=\"nav-link\" href=\"/#login\">Connexion <span className=\"sr-only\">(current)</span></a>\n                </Button>\n            )\n        } else {\n            return <LogoutButton />\n        }\n    }\n\n    return (\n        <>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"/#\">Détecteur d'émotions</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/#result\">Résultat <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <div className={classes.connexionDiv}>\n                        <li className=\"nav-item active\" className={classes.buttonLi}>\n                            <SignUp />\n                        </li>\n                        <li className=\"nav-item active\"className={classes.buttonLi}>\n                            <LogButton />                            \n                        </li>\n                    </div>\n                    </ul>\n                </div>\n            </nav>\n            <br />\n            <br />\n        </>\n    )\n});\n\nexport default Menu;","/app/src/Routing.js",[],"/app/src/components/LogoutButton.jsx",[],"/app/src/pages/login/Login.jsx",[],"/app/src/pages/signin/Signin.jsx",[],"/app/src/pages/result/Result.jsx",["88"],"import React from \"react\";\nimport ResultText from \"./ResultText\"\nimport ResultUrl from \"./ResultUrl\"\n\nconst Result = (props) => {\n    let from = sessionStorage.getItem(\"from\")\n\n    switch (from) {\n        case \"url\":\n            return <ResultUrl />\n        case \"text\":\n            return <ResultText />\n    }\n};\n\nexport default Result;","/app/src/pages/result/BestResult.jsx",[],"/app/src/pages/result/ResultsTable.jsx",[],"/app/src/pages/submit/Submits.jsx",["89"],"import React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubmitText from \"./SubmitText\";\nimport SubmitUrl from \"./SubmitUrl\";\n\nconst useStyle = makeStyles({\n  choiceButton: {\n      width: 220,\n      height: 25,\n      margin: 20,\n  },\n  alert: {\n      width: 800,\n      margin: \"auto\",\n      marginBottom: 20,\n  },\n});\n\n\nconst Submits = (props) => {\n    const classes = useStyle();\n    const [alert, setAlert] = useState([]);\n    const [choice, setChoice] = useState(\"url\")\n    let component = \"\"\n\n    useEffect(() => {\n        const passedAlertSeverity = sessionStorage.getItem(\"alert_severity\")\n        const passedAlert = sessionStorage.getItem(\"alert\")\n        if (passedAlertSeverity && passedAlert) {\n            setAlert([passedAlertSeverity, passedAlert])\n            sessionStorage.removeItem(\"alert\")\n            sessionStorage.removeItem(\"alert_severity\")\n        }\n    }, [])\n\n    switch (choice) {\n        case \"text\":\n            component = <SubmitText setAlert={setAlert} />\n            break\n        case \"url\":\n            component = <SubmitUrl setAlert={setAlert} />\n            break\n    }\n\n    return(\n        <>\n            {\n                alert.length > 0 && <>\n                <Alert severity={alert[0]} className={classes.alert} >\n                    {alert[1]}\n                </Alert>\n                </>\n            }\n            <div>\n             <Button \n                    variant=\"contained\"\n                    color={choice === \"url\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"url\")}\n                >\n                    Avis clients\n                </Button>\n\n                <Button \n                    variant=\"contained\"\n                    color={choice === \"text\" ? \"primary\" : \"\"}\n                    className={classes.choiceButton}\n                    onClick={() => setChoice(\"text\")}\n                >\n                    Texte libre\n                </Button>\n            </div>\n            {component}\n        </>\n    )\n};\n\nexport default Submits;","/app/src/pages/submit/SubmitText.jsx",[],"/app/src/pages/submit/SubmitUrl.jsx",[],"/app/src/pages/result/ResultText.jsx",[],"/app/src/pages/result/ResultUrl.jsx",[],"/app/src/pages/result/ResultsGraph.jsx",[],"/app/src/pages/account/Account.jsx",[],"/app/src/pages/account/QueriesTable.jsx",["90","91"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { decodeToken } from \"react-jwt\";\nimport axios from \"axios\";\nimport Routing from \"../../Routing\";\nimport Alert from '@material-ui/lab/Alert';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({\n    deleteCell: {\n        textAlign: \"center\",\n    },\n    delete: {\n        color: \"red\",\n        fontSize: 30,\n    },\n    alert: {\n        width: 800,\n        margin: \"auto\",\n        marginBottom: 20,\n    },\n})\n\n\nconst fetchQueries = (setQueries) => {\n    let url = `${Routing.baseUrl}/account`\n    let config = {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n    };\n\n    axios.get(url, config)\n    .then(({data}) => {\n        setQueries(data.queries)\n    })\n    .catch((error) => {\n        console.error(error)\n    })\n}\n\n\nconst fetchResults = (queryId, query, history) => {\n    let url = `${Routing.baseUrl}/detail/${queryId}`\n    let config = {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n    };\n\n    axios.get(url, config)\n    .then(({data}) => {\n        const payload = {\n            \"url\": query.url,\n            \"title\": query.title,\n            \"best_result\": query.emotion,\n            \"detailed_results\": data.detailed_result,\n            \"phrases\": data.phrases,\n            \"sents\": [],\n        }\n    \n        sessionStorage.setItem(\"data\", JSON.stringify(payload))\n        sessionStorage.setItem(\"from\", \"url\")\n    \n        history.push('result')\n    })\n    .catch((error) => {\n        console.error(error)\n    })\n}\n\n\nconst deleteQuery = (deleteId, setAlert) => {\n    let url = `${Routing.baseUrl}/delete/${deleteId}`\n    let config = {\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` }\n    };\n\n    axios.delete(url, config)\n    .then((resp) => {\n        sessionStorage.setItem(\"alert_severity\", \"success\")\n        sessionStorage.setItem(\"alert\", \"Suppression réussie\")\n        // HACK Force te reload because the state change is not alwais detected\n        document.location.reload();\n    })\n    .catch((error) => {\n        console.error(error)\n        setAlert([\"error\", \"Echec de la suppression\"])\n    })\n}\n\n\nconst QueriesTable = (props) => {\n    const classes = useStyle();\n    const history = useHistory();\n    const [alert, setAlert] = useState([]);\n    const [queries, setQueries] = useState();\n    const userName = decodeToken(localStorage.getItem('access_token'))?.sub.username;\n\n    useEffect(() => {\n        fetchQueries(setQueries)\n    }, [])\n\n    useEffect(() => {\n        const passedAlertSeverity = sessionStorage.getItem(\"alert_severity\")\n        const passedAlert = sessionStorage.getItem(\"alert\")\n        if (passedAlertSeverity && passedAlert) {\n            setAlert([passedAlertSeverity, passedAlert])\n            sessionStorage.removeItem(\"alert\")\n            sessionStorage.removeItem(\"alert_severity\")\n        }\n    }, [])\n\n    const handleClick = (event) => {  \n        let queryId = event.target.attributes.query_id.value\n        for (const idx in queries) {\n            if (queries[idx].id == queryId) {\n                const query = queries[idx]\n                fetchResults(queryId, query, history)\n            }\n        }\n    }\n\n    const handleDelete = (event) => {\n        // BUG Parfois undefined !! POURQUOI ??\n        let deleteId = event.target.attributes.delete_id?.value\n        deleteQuery(deleteId, setAlert)\n    }\n\n    let rows = []\n    for (const idx in queries) {\n        rows.push(\n            <TableRow>\n                <TableCell><a onClick={handleClick} query_id={queries[idx][\"id\"]} >{queries[idx][\"title\"]}</a></TableCell>\n                <TableCell><a href={queries[idx][\"url\"]} target=\"_blank\" rel=\"noreferrer\" >{queries[idx][\"url\"]}</a></TableCell>\n                <TableCell>{queries[idx][\"emotion\"]}</TableCell>\n                {/* TODO Format date */}\n                <TableCell>{queries[idx][\"date\"]}</TableCell>\n                <TableCell className={classes.deleteCell}>\n                    <Button variant=\"contained\" onClick={handleDelete} delete_id={queries[idx][\"id\"]} >\n                        <DeleteForeverIcon className={classes.delete} delete_id={queries[idx][\"id\"]} />\n                    </Button>\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    return (\n        <>\n            {\n                alert.length > 0 && <>\n                <Alert severity={alert[0]} className={classes.alert} >\n                    {alert[1]}\n                </Alert>\n                </>\n            }\n            <h3>Historique des requêtes de <strong>{userName}</strong></h3>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Titre</TableCell>\n                            <TableCell>URL</TableCell>\n                            <TableCell>Émotion</TableCell>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Supprimer</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n};\n\n\nexport default QueriesTable;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":34,"column":8,"nodeType":"98","endLine":34,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":83,"column":57,"nodeType":"101","endLine":83,"endColumn":85},{"ruleId":"99","severity":1,"message":"100","line":86,"column":56,"nodeType":"101","endLine":86,"endColumn":84},{"ruleId":"102","severity":1,"message":"103","line":8,"column":5,"nodeType":"104","messageId":"105","endLine":13,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":38,"column":5,"nodeType":"104","messageId":"105","endLine":45,"endColumn":6},{"ruleId":"106","severity":1,"message":"107","line":122,"column":33,"nodeType":"108","messageId":"109","endLine":122,"endColumn":35},{"ruleId":"110","severity":1,"message":"111","line":139,"column":28,"nodeType":"112","endLine":139,"endColumn":84},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Literal","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]